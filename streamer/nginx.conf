worker_processes auto;

events {
    worker_connections  1024;
}

#error_log /var/log/nginx/error.log debug;
error_log /var/log/nginx/error.log;

## HLS server streaming
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
	ping 30s; # rtmp keepalive check
	notify_method get;
        
	application show {
            live on;

            # Turn on HLS
            hls on;
            hls_nested off;
            hls_path /tmp/hls/;
            hls_fragment 4s;
            hls_playlist_length 20s;
            hls_sync 100ms;
	    hls_type live;

            # record everything
            record all;
            record_suffix -%Y-%m-%d-%T.flv;
            record_path /videos/;
            record_append on; # append data to old file instead of creating new one?
            record_interval 1h;
            record_unique off; # append timestamp to the beginning of the file?

            # convert stored fileto browser friendly format           
            exec_record_done ffmpeg -y -i $path -an -ar 44100 -ac 1 -vcodec libx264 $dirname/$basename.mp4 && rm $path;
 
            # disable consuming the stream from nginx as rtmp
            deny play all;
        }
    }
}

#end hls server stream


http {
   
    sendfile off;
    tcp_nopush on;
    directio 512;
    default_type application/octet-stream;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /tmp/html;
            index  index.html index.htm;
        }

        location /videos {
            alias /videos;

            autoindex on;
            autoindex_format json;
            autoindex_exact_size on;
        }

	location /hls {
            # Disable cache
            add_header Cache-Control no-cache;

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /tmp/;
        }
    }

}
